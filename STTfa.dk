Typ : Type.
fun : Typ -> Typ -> Typ.

def eta : Typ -> Type.
[a, b] eta (fun a b) --> eta a -> eta b.

prop : Typ.
imp : eta prop -> eta prop -> eta prop.
all : a:Typ -> (eta a -> eta prop) -> eta prop.

def eps : eta prop -> Type.
[a, b] eps (imp a b) --> eps a -> eps b.
[a, b] eps (all a b) --> x:eta a -> eps (b x).
